-
    question: "What is the primary difference between a method declared as static and a normal method ?"
    code_snippet: ~
    correction_help:
        - https://php.net/manual/en/language.oop5.static.php
    answers:
        - {value: "There is no functional difference between a static and non-static method", correct: false}
        - {value: "Static methods can only be called using the <info>::</info> syntax and never from an instance", correct: false}
        - {value: "Static methods cannot be called from within class instances", correct: false}
        - {value: "Static methods don't have access to the <info>self</info> keyword", correct: false}
        - {value: "Static methods do not provide a reference to <info>$this</info>", correct: true}
-
    question: "How to define a class that inherits from <info>Foo</info> ?"
    code_snippet: ~
    correction_help:
        - https://www.php.net/manual/en/language.oop5.inheritance.php
    answers:
        - {value: "class Bar extends Foo {}", correct: true}
        - {value: "class Bar childof Foo {}", correct: false}
        - {value: "class Bar inherits Foo {}", correct: false}
-
    question: "Considering the following code snippet, is this class definition valid ?"
    code_snippet: |
        namespace Application\Exception;

        class Exception extends \Exception
        {
        }
    correction_help:
        - https://php.net/manual/en/language.namespaces.php
    answers:
        - {value: "Yes", correct: true}
        - {value: "No", correct: false}