-
    question: "What is enforced by the <info>File</info> constraint in the following code ?"
    code_snippet: |
        <?php

        # ...

        use Symfony\Component\Validator\Constraints as Assert;

        class UserProfile
        {
            #[Assert\File(extensions: 'jpg')]
            protected $avatar;

            // ...
        }
    correction_help:
        - https://symfony.com/doc/6.2/reference/constraints/File.html#extensions
    answers:
        - {value: "The file should be compatible with JPEG media types", correct: true}
        - {value: "The file should have the <info>.jpg</info> extension", correct: true}
        - {value: "The file should have the <info>.jpeg</info> extension", correct: false}
-
    question: "A constraint can be applied on :"
    code_snippet: ~
    correction_help:
        - https://symfony.com/doc/current/book/validation.html#properties
    answers:
        - {value: "Public properties", correct: true}
        - {value: "Private properties", correct: true}
        - {value: "Protected properties", correct: true}
-
    question: "How can you inverse the result of the validation when using <info>Regex</info> validation constraint ?"
    code_snippet: ~
    correction_help:
        - https://symfony.com/doc/2.3/reference/constraints/Regex.html
    answers:
        - {value: "Using the <info>match</info> option", correct: true}
        - {value: "Using the <info>prune</info> option", correct: false}
        - {value: "Using the <info>inverse</info> option", correct: false}
        - {value: "Using the <info>not</info> option", correct: false}
-
    question: "Which of the following values will not trigger a <info>Blank</info> violation constraint ?"
    code_snippet: ~
    correction_help:
        - https://symfony.com/doc/2.7/reference/constraints/Blank.html
    answers:
        - {value: "<info>false</info>", correct: false}
        - {value: "<info>[]</info>", correct: false}
        - {value: "<info>null</info>", correct: true}
        - {value: "<info>''</info>", correct: true}
-
    question: "Will the following code trigger a <info>InvalidArgumentException</info> ?"
    code_snippet: |
        <?php

        use Symfony\Component\Validator\Validation;
        use Symfony\Component\Validator\Constraints\Ip;

        $ip = "2607:f0d0:1002:51::4"; // This is a valid IPv6 address

        $validator = Validation::createValidator();
        $violations = $validator->validate($ip, [new Ip()]);

        if (0 !== count($violations)) {
            throw new InvalidArgumentException();
        }
    correction_help:
        - https://symfony.com/doc/current/reference/constraints/Ip.html#version
    answers:
        - {value: "Yes", correct: true}
        - {value: "No", correct: false}